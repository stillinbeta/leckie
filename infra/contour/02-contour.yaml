---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: contour
  name: contour
  namespace: heptio-contour
spec:
  selector:
    matchLabels:
      app: contour
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: contour
    spec:
      hostNetwork: true
      containers:
      - image: gcr.io/heptio-images/contour:v0.10.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: contour
        name: contour
        command: ["contour"]
        args:
        - serve
        - --incluster
        - --envoy-service-http-port=80
        - --envoy-service-https-port=443
        # - --http-address=127.0.0.1
        # - --http-port=8000
      - image: docker.io/envoyproxy/envoy:v1.9.0
        name: envoy
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
        - containerPort: 443
          hostPort: 443
          name: https
        # - containerPort: 8002
        #   hostPort: 8002
        #   name: metrics
        #   protocol: TCP
        command: ["envoy"]
        args:
        - --config-path /config/contour.json
        - --service-cluster cluster0
        - --service-node node0
        - --log-level info
        - --v2-config-only
        # readinessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: 8002
        # 68.183.22.87
        #   initialDelaySeconds: 3
        #   periodSeconds: 3
        volumeMounts:
        - name: contour-config
          mountPath: /config
        lifecycle:
          preStop:
            exec:
              command: ["wget", "-qO-", "http://localhost:9001/healthcheck/fail"] 
      # - args:
      #   - --logtostderr
      #   - --secure-listen-address=$(IP):8002
      #   - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      #   - --upstream=http://127.0.0.1:8002/
      #   env:
      #   - name: IP
      #     valueFrom:
      #       fieldRef:
      #         fieldPath: status.podIP
      #   image: quay.io/coreos/kube-rbac-proxy:v0.4.1
      #   name: kube-rbac-proxy-contour
      #   ports:
      #   - containerPort: 8002
      #     hostPort: 8002
      #     name: https
      #   resources:
      #     limits:
      #       cpu: 20m
      #       memory: 40Mi
      #     requests:
      #       cpu: 10m
      #       memory: 20Mi

      # - name: statsd-sink
      #   image: prom/statsd-exporter:v0.6.0
      #   command: 
      #       - "/bin/statsd_exporter"
      #   args:
      #       - "--web.listen-address=127.0.0.1:9102"
      #       - "-statsd.mapping-config=/etc/statsd/statsd.yaml"
      #   ports:
      #   - containerPort: 9102
      #     protocol: TCP
      #     name: metrics
      #   volumeMounts:
      #   - name: statsd
      #     mountPath: /etc/statsd
      - args:
        - --logtostderr
        - --secure-listen-address=$(IP):8010
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
        - --upstream=http://127.0.0.1:8002/
        env:
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: quay.io/coreos/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy-envoy
        ports:
        - containerPort: 8010
          hostPort: 8010
          name: https
        resources:
          limits:
            cpu: 20m
            memory: 40Mi
          requests:
            cpu: 10m
            memory: 20Mi
      initContainers:
      - image: gcr.io/heptio-images/contour:v0.10.0
        imagePullPolicy: Always
        name: envoy-initconfig
        command: ["contour"]
        args: 
        - bootstrap
        # Uncomment the statsd-enable to enable statsd metrics
        - --statsd-enabled
        # Uncomment to set a custom stats emission address and port
        - --stats-address=0.0.0.0
        - --stats-port=8002
        - /config/contour.json
        volumeMounts:
        - name: contour-config
          mountPath: /config
      volumes:
      - name: contour-config
        emptyDir: {}
      - name: statsd
        configMap:
          name: envoy-statsd
      dnsPolicy: ClusterFirst
      serviceAccountName: contour
      terminationGracePeriodSeconds: 30

---
